O = .obj

rule babel
  command = $$(npm bin)/babel $
    --presets es2015 $
    --source-maps false $
    --compact false $
    --no-comments $
    $in -o $out

rule crisper
  # JS file must be first, HTML file must be second.
  command = $$(npm bin)/crisper $
    --source $in $
    --script-in-head=false $
    $$(set -- $out; echo --js $$1 --html $$2)

rule vulcanize
  command = $$(npm bin)/vulcanize $
    --inline-scripts $
    --inline-css $
    $in --out-html $out

rule uglify
  command = $$(npm bin)/uglifyjs $
    $in -o $out

rule htmlminifier
  command = $$(npm bin)/html-minifier $
    --custom-attr-assign [\"/\\\\$$=/\"] $
    --lint $
    --remove-comments $
    --collapse-whitespace $
    --minify-css $
    -o $out $in $


rule cp
  command = cp $in $out

¬ MODULES = {
¬   "ts-application",
¬   "ts-codeeditor",
¬   "ts-document",
¬   "ts-editor",
¬   "ts-game-page",
¬   "ts-game-settings",
¬   "ts-globals",
¬   "ts-gruntle",
¬   "ts-grt-binding",
¬   "ts-login",
¬   "ts-map",
¬   "ts-parser",
¬   "ts-roomstore",
¬   "ts-transcript",
¬   "ts-transformer",
¬   "ts-user-preferences",
¬   "ts-welcome",
¬ }

¬ for _, m in pairs(MODULES) do
build $O/6/¬(m).js $O/6/¬(m).html: crisper src/¬(m).html
build $O/¬(m).js                 : babel $O/6/¬(m).js
build $O/¬(m).html               : cp $O/6/¬(m).html
¬ end

build $O/index.html: cp src/index.html
build $O/combined.html: vulcanize $O/index.html | $
¬ for _, m in pairs(MODULES) do
  $O/¬(m).html $O/¬(m).js $
¬ end

build $O/combined/index.js $O/combined/index.html: crisper $O/combined.html

build dist/index.js: uglify $O/combined/index.js
build dist/index.html: htmlminifier $O/combined/index.html
build dist/icon.png: cp extras/icon.png

# vim: set ts=2 sw=2 expandtab:

